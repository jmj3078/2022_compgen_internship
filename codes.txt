bgzip -c file.vcf > file.vcf.gz #gz 생성
tabix -p vcf file.vcf.gz #index file 생성

#국룰 mkdir 코드

if [ ! -d $INPUT\_mutect2 ];then
    mkdir $INPUT\_mutect2
    echo "make $INPUT\_mutect2 directory"
else
    echo "$INPUT\_mutect2 directory already exist"
fi

#workflow 또는 pipeline을 만들때는
# 큰 작업폴더 + log + data + shell script 형태에서
# 하위 폴더를 각 script가 제작하여 그 안에서 작업하도록 만드는게 가장 효율적임!
# 이렇게 하면 파일이 겹치는 현상도 방지 가능, 한꺼번에 한 스크립트로 작업 가능

vcffilter -f "FILTER = PASS" snps.vcf.gz > filter.vcf.gz

# vcf 파일에서 FILTER = "PASS"만 꺼내오기. 가장 짧고 편한 코드
# vcftools, bcftools, vcffilter 모두 editing 이후 형식이 일부 변경됨
# mutect2와는 호환이 좋으나 strelka의 경우 GT tag가 날라가서 convert2annovar 가 작동하지 않음
# annovar 에선 FILTER에 필터링 된 variants들도 모두 annotation하는데 최종 결과물에선 그 PASS된 것들을 골라낼 방법이 없다
# vcf에서 index를 확인하거나 vcf를 필터링하고 사용하는 것이 가장 편한 방법인 듯 하다.
# 그냥 직접 python 사용해서 avinput 만들어주는게 가장 편함
# pipeline화 시킬 필요 있음...

# replow는 원형 bed 파일을 사용하고(바꿔놓으면 작동 안한다)
# mutect2, strelka와 같은 다른 tool들은 chr1 > 1로 bed를 변환시켜 줘야 작동한다
# 